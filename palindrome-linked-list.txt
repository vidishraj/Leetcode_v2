/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
bool check(int* arr, int count){
    int i=0;
    int flag=0;
    int j=count-1;
    if(count%2==0){//even
        while(i<j && flag==0){
            if(arr[i]==arr[j]){
                i++;
                j--;
            }
            else{
                flag=1;
            }
        }
    }
    else if(count%2!=0){//odd
        while(i!=j && flag==0){
            if(arr[i]==arr[j]){
                i++;
                j--;
            }
            else{
                flag=1;
            }
        }
    }
    if(flag==0){
        return 1;
    }
    return 0;
}

bool isPalindrome(struct ListNode* head){
    struct ListNode* temp1=head;
    int count=0;
    while(temp1!=NULL){
        count++;
        temp1=temp1->next;
    }
    temp1=head;
    int i=0;
    int *arr=(int*)malloc(sizeof(int)*count);
    while(temp1!=NULL){
        arr[i]=temp1->val;
        i++;
        temp1=temp1->next;
    }
    //now array has the elements
        return check(arr,count);

}